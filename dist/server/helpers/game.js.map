{"version":3,"sources":["../../../src/server/helpers/game.js"],"names":[],"mappings":"8EAQgB,4CAsBA,wDAsBA;;;;GA5CT,SAAS,iBAAT,CAA2B,QAA3B,CAAqC,CAC1C,IAAI,aAAe,CAAC,CAAD,CAAI,OAAS,CAAC,CAAD,CADU,IAGrC,IAAI,EAAI,CAAJ,CAAO,EAAI,SAAS,MAAT,CAAiB,GAArC,CAA0C,CACxC,GAAI,SAAS,CAAT,EAAY,IAAZ,GAAqB,uBAAY,IAAZ,CAAkB,CACzC,IAAI,SAAW,SAAS,CAAT,EAAY,OAAZ,CAAsB,SAAS,CAAT,EAAY,OAAZ,CAAoB,MAApB,CAA6B,CAAnD,CAD0B,GAErC,aAAe,CAAf,EAAoB,SAAW,YAAX,CAAyB,CAC/C,aAAe,QAAf,CAD+C,MAE/C,CAAS,SAAS,CAAT,EAAY,EAAZ,CAFsC,CAFnD,CADF,OAUO,MAAP,CAb0C;;;;;GAsBrC,SAAS,uBAAT,CAAiC,QAAjC,CAA2C,EAA3C,CAA+C,CACpD,IAAI,OAAS,CAAC,CAAD,CADuC,IAG/C,IAAI,EAAI,CAAJ,CAAO,EAAI,SAAS,MAAT,CAAiB,GAArC,CAA0C,CACxC,GAAI,SAAS,CAAT,EAAY,IAAZ,GAAqB,uBAAY,IAAZ,EAAoB,SAAS,CAAT,EAAY,OAAZ,CAAqB,CAChE,IAAK,IAAI,EAAI,CAAJ,CAAO,EAAI,SAAS,CAAT,EAAY,OAAZ,CAAoB,MAApB,CAA4B,GAAhD,CAAqD,CACnD,GAAI,SAAS,CAAT,EAAY,OAAZ,CAAoB,CAApB,IAA2B,EAA3B,CAA+B,CACjC,OAAS,CAAT,CADiC,CADrC,CADF,CADF,OAUO,MAAP,CAboD;;;;;GAsB/C,SAAS,0BAAT,CAAoC,SAApC,CAA+C,WAA/C,CAA4D,CACjE,IAAI,EAAI,CAAJ,CAAO,EAAI,CAAJ,CADsD,GAG7D,UAAU,IAAV,CAAgB,CAClB,EAAI,eAAO,OAAP,CAAe,CAAE,IAAK,UAAU,IAAV,CAAe,CAAf,CAAkB,IAAK,SAAC,CAAU,IAAV,CAAe,CAAf,CAAmB,UAAU,IAAV,CAAe,KAAf,CAAwB,YAAY,KAAZ,CAAzF,CAAJ,CADkB,CAElB,CAAI,eAAO,OAAP,CAAe,CAAE,IAAK,UAAU,IAAV,CAAe,CAAf,CAAkB,IAAK,SAAC,CAAU,IAAV,CAAe,CAAf,CAAmB,UAAU,IAAV,CAAe,MAAf,CAAyB,YAAY,MAAZ,CAA1F,CAAJ,CAFkB,OAKb,CAAE,GAAF,CAAK,GAAL,CAAP,CARiE","file":"game.js","sourcesContent":["import { chance } from './vendor';\nimport { EntityTypes } from 'shared/constants';\n\n/**\n *\n * @param {Array} entities\n * @returns {string}\n */\nexport function findWeakestTeamId(entities) {\n  let leastPlayers = -1, result = -1;\n\n  for (let i = 0; i < entities.length; i++) {\n    if (entities[i].type === EntityTypes.TEAM) {\n      let teamSize = entities[i].players ? entities[i].players.length : 0;\n      if (leastPlayers < 0 || teamSize < leastPlayers) {\n        leastPlayers = teamSize;\n        result = entities[i].id;\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n *\n * @param {Array} entities\n * @param {string} id\n * @returns {number}\n */\nexport function findTeamIndexByPlayerId(entities, id) {\n  let result = -1;\n\n  for (let i = 0; i < entities.length; i++) {\n    if (entities[i].type === EntityTypes.TEAM && entities[i].players) {\n      for (let j = 0; j < entities[i].players.length; j++) {\n        if (entities[i].players[j] === id) {\n          result = i;\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n *\n * @param {Object} teamProps\n * @param {Object} playerProps\n * @returns {{x: number, y: number}}\n */\nexport function calculateTeamSpawnPosition(teamProps, playerProps) {\n  let x = 0, y = 0;\n\n  if (teamProps.base) {\n    x = chance.integer({ min: teamProps.base.x, max: (teamProps.base.x + teamProps.base.width) - playerProps.width });\n    y = chance.integer({ min: teamProps.base.y, max: (teamProps.base.y + teamProps.base.height) - playerProps.height });\n  }\n\n  return { x, y };\n}\n"]}