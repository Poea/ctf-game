{"version":3,"sources":["../../../src/server/factories/map.js"],"names":[],"mappings":"8EAagB,wUAPhB,IAAM,SAAW,0CAAX;;;;GAOC,SAAS,SAAT,CAAmB,GAAnB,CAAwB,QAAxB,CAAkC,CAEvC,GAAI,CAAC,SAAS,GAAT,CAAD,CAAgB,CAClB,MAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN,CADkB,IAId,QAAU,SAAS,GAAT,CAAV,CANiC,IAQjC,KAAO,iCAAwB,QAAQ,GAAR,CAA/B,CARiC,GAUnC,CAAC,IAAD,CAAO,CACT,MAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN,CADS,mBAIX,CAAQ,KAAK,MAAL,CAAa,eAAS,CAC5B,GAAI,MAAM,IAAN,2BAAJ,CAAkC,CAChC,oBAAQ,MAAM,OAAN,CAAe,gBAAU,CAC/B,IAAI,MAAQ,uBAAY,CACtB,KAAM,OAAO,IAAP,CACN,EAAG,OAAO,CAAP,CACH,EAAG,OAAO,CAAP,CACH,MAAO,OAAO,KAAP,CACP,OAAQ,OAAO,MAAP,CALE,CAAR,CAD2B,GAS3B,KAAJ,CAAW,CACT,SAAS,oBAAU,KAAV,CAAT,EADS,CATU,CAAvB,CADgC,CADf,CAArB,CAduC,OAgChC,CACL,GAAI,kBAAQ,QAAR,EAAJ,CACA,IAAK,GAAL,CACA,MAAO,QAAQ,KAAR,CACP,MAAO,QAAQ,KAAR,CACP,UAAW,QAAQ,SAAR,CACX,KAAM,IAAN,CACA,OAAQ,KAAK,MAAL,CACR,MAAO,KAAK,KAAL,CAAa,KAAK,QAAL,CAAc,CAAd,EAAiB,SAAjB,CACpB,OAAQ,KAAK,MAAL,CAAc,KAAK,QAAL,CAAc,CAAd,EAAiB,UAAjB,CATxB,CAhCuC","file":"map.js","sourcesContent":["import shortid from 'shortid';\nimport { forEach } from 'lodash';\nimport { addEntity } from '../actions/game';\nimport { createProps } from '../factories/props';\nimport { DATA_PATH, LAYER_OBJECTS } from '../constants';\n\nconst mapsData = require(`${DATA_PATH}/maps.json`);\n\n/**\n *\n * @param {string} key\n * @param {function} dispatch\n */\nexport function createMap(key, dispatch) {\n\n  if (!mapsData[key]) {\n    throw new Error('Failed to load data for unknown map.');\n  }\n\n  const mapData = mapsData[key];\n\n  const json = require(`${DATA_PATH}/${mapData.src}`);\n\n  if (!json) {\n    throw new Error('Failed to load unknown map.');\n  }\n\n  forEach(json.layers, layer => {\n    if (layer.type === LAYER_OBJECTS) {\n      forEach(layer.objects, object => {\n        let props = createProps({\n          type: object.type,\n          x: object.x,\n          y: object.y,\n          width: object.width,\n          height: object.height\n        });\n\n        if (props) {\n          dispatch(addEntity(props));\n        }\n      });\n    }\n  });\n\n  return {\n    id: shortid.generate(),\n    key: key,\n    image: mapData.image,\n    music: mapData.music,\n    collision: mapData.collision,\n    data: json,\n    layers: json.layers,\n    width: json.width * json.tilesets[0].tilewidth,\n    height: json.height * json.tilesets[0].tileheight\n  };\n}\n"]}