{"version":3,"sources":["../../../src/server/reducers/game.js"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["import { Map, List, fromJS } from 'immutable';\nimport { isNumber } from 'lodash';\nimport {\n  findEntityById,\n  findEntityIndexById,\n  findWeakestTeamIndex,\n  findTeamIndexByPlayerId,\n  calculateBaseSpawnPosition\n} from '../helpers/game';\nimport {\n  ADD_ENTITY,\n  REMOVE_ENTITY,\n  ASSIGN_TEAM,\n  LEAVE_TEAM,\n  SET_POSITION,\n  SET_VELOCITY,\n  SET_ANIMATION,\n  SET_FACING,\n  BEGIN_ATTACK,\n  END_ATTACK,\n  DAMAGE_ENTITY,\n  KILL_ENTITY,\n  BEGIN_REVIVE,\n  END_REVIVE,\n  ADD_POINTS,\n  TAG_FLAG,\n  ADVANCE_TIME\n} from '../actions/game';\n\nconst initialState = Map({\n  entities: List(),\n  time: Map({ elapsed: 0 })\n});\n\n/**\n *\n * @param {Map} state\n * @param {Object} entity\n * @returns {Map}\n */\nexport function addEntity(state, entity) {\n  return state.update('entities', entities => entities.push(fromJS(entity)));\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @returns {Map}\n */\nexport function removeEntity(state, id) {\n  return state.update('entities', entities => entities.filter(entity => entity.get('id') !== id));\n}\n\n// TODO: Write tests for assigning and leaving teams.\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @returns {Map}\n */\nexport function assignTeam(state, id) {\n  const playerIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  const teamIndex = findWeakestTeamIndex(state.get('entities').toJS());\n  const playerProps = state.getIn(['entities', playerIndex]).toJS();\n  const baseProps = state.getIn(['entities', teamIndex]).toJS();\n  const { x, y } = calculateBaseSpawnPosition(playerProps, baseProps);\n  return setPosition(state, id, x, y)\n    .updateIn(['entities', teamIndex, 'players'], List(), players => players.push(id))\n    .setIn(['entities', playerIndex, 'team'], baseProps.id)\n    .setIn(['entities', playerIndex, 'color'], baseProps.color)\n    .setIn(['entities', playerIndex, 'hexColor'], baseProps.hexColor);\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @returns {Map}\n */\nexport function leaveTeam(state, id) {\n  const teamIndex = findTeamIndexByPlayerId(state.get('entities').toJS(), id);\n  return state.updateIn(['entities', teamIndex, 'players'], players => players.filter(playerId => playerId !== id));\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @param {number} x\n * @param {number} y\n * @returns {Map}\n */\nexport function setPosition(state, id, x, y) {\n  const entityIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  return state.setIn(['entities', entityIndex, 'x'], x).setIn(['entities', entityIndex, 'y'], y);\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @param {number} vx\n * @param {number} vy\n * @returns {Map}\n */\nexport function setVelocity(state, id, vx, vy) {\n  const entityIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  return state.setIn(['entities', entityIndex, 'vx'], vx).setIn(['entities', entityIndex, 'vy'], vy);\n}\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @param {string} animation\n * @returns {Map}\n */\nexport function setAnimation(state, id, animation) {\n  const entityIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  return state.setIn(['entities', entityIndex, 'animation'], animation);\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @param {string} facing\n * @returns {Map}\n */\nexport function setFacing(state, id, facing) {\n  const entityIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  return state.setIn(['entities', entityIndex, 'facing'], facing);\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @param {boolean} value\n * @returns {Map}\n */\nexport function setIsAttacking(state, id, value) {\n  const entityIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  return state.setIn(['entities', entityIndex, 'isAttacking'], value);\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @param {string} victimId\n * @returns {Map}\n */\nexport function damageEntity(state, id, victimId) {\n  const attackerIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  const victimIndex = findEntityIndexById(state.get('entities').toJS(), victimId);\n  const attackerColor = state.getIn('entities', attackerIndex, 'color');\n  const victimColor = state.getIn('entities', victimIndex, 'color');\n  if (attackerColor === victimColor) {\n    return state;\n  }\n  const damage = state.getIn(['entities', attackerIndex, 'damage']);\n  const health = state.getIn(['entities', victimIndex, 'health']);\n  return state.updateIn(['entities', victimIndex, 'currentHealth'], health, value => value - damage)\n    .setIn(['entities', victimIndex, 'lastAttackerId'], id);\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @param {string} lastAttackerId\n * @returns {Map}\n */\nexport function killEntity(state, id, lastAttackerId) {\n  const entityIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  const attackerIndex = findEntityIndexById(state.get('entities').toJS(), lastAttackerId);\n  return setIsDead(state, id, true)\n    .setIn(['entities', entityIndex, 'currentHealth'], 0)\n    .updateIn(['entities', attackerIndex, 'numKills'], 0, value => value + 1)\n    .updateIn(['entities', entityIndex, 'numDeaths'], 0, value => value + 1);\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @returns {Map}\n */\nexport function beginRevive(state, id) {\n  const playerIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  const playerProps = findEntityById(state.get('entities').toJS(), id);\n  if (playerProps.team) {\n    const baseProps = findEntityById(state.get('entities').toJS(), playerProps.team);\n    const { x, y } = calculateBaseSpawnPosition(playerProps, baseProps);\n    state = setPosition(state, id, x, y);\n  }\n  const health = state.getIn(['entities', playerIndex, 'health']);\n  return setIsDead(setIsReviving(state, id, true), id, false)\n    .setIn(['entities', playerIndex, 'currentHealth'], health)\n    .removeIn(['entities', playerIndex, 'lastAttackerId']);\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @param {boolean} value\n * @returns {Map}\n */\nexport function setIsDead(state, id, value) {\n  const entityIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  return state.setIn(['entities', entityIndex, 'isDead'], value);\n}\n\n/**\n * \n * @param {Map} state\n * @param {string} id\n * @param {boolean} value\n * @returns {Map}\n */\nexport function setIsReviving(state, id, value) {\n  const entityIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  return state.setIn(['entities', entityIndex, 'isReviving'], value);\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} id\n * @param {number} points\n * @returns {Map}\n */\nexport function addPoints(state, id, points) {\n  const entityIndex = findEntityIndexById(state.get('entities').toJS(), id);\n  return state.setIn(['entities', entityIndex, 'points'], 0, value => value + points);\n}\n\n/**\n *\n * @param {Map} state\n * @param {string} flagId\n * @param {string} playerId\n * @returns {Map}\n */\nexport function tagFlag(state, flagId, playerId) {\n  const playerIndex = findEntityIndexById(state.get('entities').toJS(), playerId);\n  const flagIndex = findEntityIndexById(state.get('entities').toJS(), flagId);\n  const playerColor = state.getIn(['entities', playerIndex, 'color']);\n  const flagColor = state.getIn(['entities', flagIndex, 'color']);\n  if (playerColor === flagColor) {\n    return state;\n  }\n  return state.setIn(['entities', flagIndex, 'color'], playerColor);\n}\n\n/**\n *\n * @param {Map} state\n * @param {number} time\n * @returns {Map}\n */\nexport function advanceTime(state, time) {\n  return state.updateIn(['time', 'elapsed'], elapsed => isNumber(time) ? elapsed + time : elapsed);\n}\n\n/**\n *\n * @param {Map} state\n * @param {Object} action\n * @returns {Map}\n */\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_ENTITY:\n      return addEntity(state, action.entity);\n\n    case REMOVE_ENTITY:\n      return removeEntity(state, action.id);\n\n    case ASSIGN_TEAM:\n      return assignTeam(state, action.id);\n\n    case LEAVE_TEAM:\n      return leaveTeam(state, action.id);\n\n    case SET_POSITION:\n      return setPosition(state, action.id, action.x, action.y);\n\n    case SET_VELOCITY:\n      return setVelocity(state, action.id, action.vx, action.vy);\n\n    case SET_ANIMATION:\n      return setAnimation(state, action.id, action.animation);\n\n    case SET_FACING:\n      return setFacing(state, action.id, action.facing);\n\n    case BEGIN_ATTACK:\n      return setIsAttacking(state, action.id, true);\n\n    case END_ATTACK:\n      return setIsAttacking(state, action.id, false);\n\n    case DAMAGE_ENTITY:\n      return damageEntity(state, action.id, action.victimId);\n\n    case KILL_ENTITY:\n      return killEntity(state, action.id, action.lastAttackerId);\n\n    case BEGIN_REVIVE:\n      return beginRevive(state, action.id);\n    \n    case END_REVIVE:\n      return setIsReviving(state, action.id, false);\n\n    case ADD_POINTS:\n      return addPoints(state, action.id, action.points);\n\n    case TAG_FLAG:\n      return tagFlag(state, action.flagId, action.playerId);\n\n    case ADVANCE_TIME:\n      return advanceTime(state, action.elapsed);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]}