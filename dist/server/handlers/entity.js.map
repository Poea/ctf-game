{"version":3,"sources":["../../../src/server/handlers/entity.js"],"names":[],"mappings":"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","file":"entity.js","sourcesContent":["import { List, fromJS } from 'immutable';\nimport { onSetPosition, onSetFacing, onSetAnimation } from 'shared/handlers/entity';\nimport { findEntityIndexById } from 'shared/helpers/game';\nimport { findTeamIndexByPlayerId, calculateBaseSpawnPosition } from '../helpers/game';\nimport { EntityActions } from 'shared/constants';\n\nexport function onAddEntity(state, action) {\n  const { entity } = action;\n  return state.push(fromJS(entity));\n}\n\nexport function onRemoveEntity(state, action) {\n  const { id } = action;\n  return state.filter(entity => entity.get('id') !== id);\n}\n\nexport function onDamageEntity(state, action) {\n  const { id, victimId } = action;\n  const entities = state.toJS();\n  const attackerIndex = findEntityIndexById(entities, id);\n  const victimIndex = findEntityIndexById(entities, victimId);\n  const attackerColor = state.getIn([attackerIndex, 'color']);\n  const victimColor = state.getIn([victimIndex, 'color']);\n  if (attackerColor === victimColor) {\n    return state;\n  }\n  const damage = state.getIn([attackerIndex, 'damage']);\n  const health = state.getIn([victimIndex, 'health']);\n  return state.updateIn([victimIndex, 'currentHealth'], health, value => value - damage)\n    .setIn([victimIndex, 'lastAttackerId'], id);\n}\n\nexport function onKillEntity(state, action) {\n  const { id, lastAttackerId } = action;\n  const entities = state.toJS();\n  const entityIndex = findEntityIndexById(entities, id);\n  const attackerIndex = findEntityIndexById(entities, lastAttackerId);\n  return setIsDead(state, action, true)\n    .setIn([entityIndex, 'currentHealth'], 0)\n    .updateIn([attackerIndex, 'numKills'], 0, value => value + 1)\n    .updateIn([entityIndex, 'numDeaths'], 0, value => value + 1);\n}\n\nexport function onBeginRevive(state, action) {\n  const { id } = action;\n  const entities = state.toJS();\n  const playerIndex = findEntityIndexById(entities, id);\n  const playerProps = state.get(playerIndex).toJS();\n  if (playerProps.team) {\n    const teamIndex = findEntityIndexById(entities, playerProps.team);\n    const teamProps = state.get(teamIndex).toJS();\n    const { x, y } = calculateBaseSpawnPosition(playerProps, teamProps.base);\n    state = onSetPosition(state, { ...action, x, y });\n  }\n  const health = state.getIn([playerIndex, 'health']);\n  return setIsDead(setIsReviving(state, action, true), action, false)\n    .setIn([playerIndex, 'currentHealth'], health)\n    .removeIn([playerIndex, 'lastAttackerId']);\n}\n\nexport function onEndRevive(state, action) {\n  return setIsReviving(setIsDead(state, action, false), action, false);\n}\n\nexport function onJoinTeam(state, action) {\n  const { teamId, playerId } = action;\n  const entities = state.toJS();\n  const playerIndex = findEntityIndexById(entities, playerId);\n  const teamIndex = findEntityIndexById(entities, teamId);\n  const playerProps = state.get(playerIndex).toJS();\n  const teamProps = state.get(teamIndex).toJS();\n  if (teamProps.base) {\n    const { x, y } = calculateBaseSpawnPosition(playerProps, teamProps.base);\n    state = onSetPosition(state, { ...action, id: playerId, x, y });\n  }\n  return state.updateIn([teamIndex, 'players'], List(), players => players.push(playerId))\n    .setIn([playerIndex, 'team'], teamProps.id)\n    .setIn([playerIndex, 'color'], teamProps.color)\n    .setIn([playerIndex, 'hexColor'], teamProps.hexColor);\n}\n\nexport function onLeaveTeam(state, action) {\n  const { playerId } = action;\n  const entities = state.toJS();\n  const teamIndex = findTeamIndexByPlayerId(entities, playerId);\n  // TODO: Figure out a way to remove the color, etc. from the player as well.\n  return state.updateIn([teamIndex, 'players'], players => players.filter(id => id !== playerId));\n}\n\nexport function onGivePoints(state, action) {\n  const { id, points } = action;\n  const entityIndex = findEntityIndexById(state.toJS(), id);\n  return state.updateIn([entityIndex, 'points'], 0, value => value + points);\n}\n\nexport function onTagFlag(state, action) {\n  const { flagId, playerId } = action;\n  const entities = state.toJS();\n  const playerIndex = findEntityIndexById(entities, playerId);\n  const flagIndex = findEntityIndexById(entities, flagId);\n  const oldTeamId = state.getIn([flagIndex, 'team']);\n  const newTeamId = state.getIn([playerIndex, 'team']);\n  const oldTeamIndex = findEntityIndexById(entities, oldTeamId);\n  const newTeamIndex = findEntityIndexById(entities, newTeamId);\n  const playerColor = state.getIn([playerIndex, 'color']);\n  const flagColor = state.getIn([flagIndex, 'color']);\n  if (playerColor === flagColor) {\n    return state;\n  }\n  return state.setIn([flagIndex, 'color'], playerColor)\n    .setIn([flagIndex, 'team'], newTeamId)\n    .updateIn([oldTeamIndex, 'numFlags'], value => value - 1)\n    .updateIn([newTeamIndex, 'numFlags'], value => (value || 0) + 1);\n}\n\nfunction setIsDead(state, action, value) {\n  const { id } = action;\n  const entityIndex = findEntityIndexById(state.toJS(), id);\n  return state.setIn([entityIndex, 'isDead'], value);\n}\n\nfunction setIsReviving(state, action, value) {\n  const { id } = action;\n  const entityIndex = findEntityIndexById(state.toJS(), id);\n  return state.setIn([entityIndex, 'isReviving'], value);\n}\n\nexport const handlers = {\n  [EntityActions.SET_POSITION]: onSetPosition,\n  [EntityActions.SET_ANIMATION]: onSetAnimation,\n  [EntityActions.SET_FACING]: onSetFacing,\n  [EntityActions.ADD_ENTITY]: onAddEntity,\n  [EntityActions.REMOVE_ENTITY]: onRemoveEntity,\n  [EntityActions.DAMAGE_ENTITY]: onDamageEntity,\n  [EntityActions.KILL_ENTITY]: onKillEntity,\n  [EntityActions.BEGIN_REVIVE]: onBeginRevive,\n  [EntityActions.END_REVIVE]: onEndRevive,\n  [EntityActions.TAG_FLAG]: onTagFlag,\n  [EntityActions.JOIN_TEAM]: onJoinTeam,\n  [EntityActions.LEAVE_TEAM]: onLeaveTeam,\n  [EntityActions.GIVE_POINTS]: onGivePoints\n};\n"]}